// THIS FILE IS AUTOMATICALLY GENERATED. DO NOT MODIFY IT.

import { Asset, Entry } from "contentful";
import { Document } from "@contentful/rich-text-types";

export interface IAuthorFields {
  /** Name */
  name: string;

  /** Picture */
  picture: Asset;
}

export interface IAuthor extends Entry<IAuthorFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: "author";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface IBingoGoalFields {
  /** Name */
  name?: string | undefined;

  /** Required Knowledge */
  requiredKnowledge?: (ITrick | IVariant)[] | undefined;

  /** Notes */
  notes?: Document | undefined;
}

/** A goal which relates to a single cell on a bingo board */

export interface IBingoGoal extends Entry<IBingoGoalFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: "bingoGoal";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface IPostFields {
  /** Title */
  title: string;

  /** Slug */
  slug: string;

  /** Content */
  content: Document;

  /** Excerpt */
  excerpt: string;

  /** Cover Image */
  coverImage: Asset;

  /** Date */
  date: string;

  /** Author */
  author: IAuthor;
}

export interface IPost extends Entry<IPostFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: "post";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface ITrickFields {
  /** Name */
  name: string;

  /** Alternative Name(s) */
  names?: string[] | undefined;

  /** Variants */
  variants: IVariant[];

  /** Is this trick usually required for bingo? */
  isUsuallyRequiredForBingo?: boolean | undefined;

  /** Is this trick a Fundamental Movement Trick? */
  isFundamentalMovement?: boolean | undefined;

  /** Is this trick v1 exclusive (across all variants)? */
  isV1Only?: boolean | undefined;

  /** Notes */
  notes?: Document | undefined;
}

/** A strategy or set of strategies which require specific knowledge outside of normal play style. Tricks can be somewhat generic, as we support Variants. A collection of tricks (or their variants) can be composed into a route, tutorials, practice session, etc. */

export interface ITrick extends Entry<ITrickFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: "trick";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface ITutorialFields {
  /** Name */
  name?: string | undefined;

  /** Notes */
  notes?: Document | undefined;

  /** Youtube Url */
  youtubeUrl?: string | undefined;
}

/** A specific set of instructions or link to content which describes how to do something. Commonly linked 1<>1 with variants or even other composed models (such as routes). */

export interface ITutorial extends Entry<ITutorialFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: "tutorial";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface IVariantFields {
  /** Name */
  name?: string | undefined;

  /** Notes */
  notes?: Document | undefined;

  /** Tutorial */
  tutorial?: Entry<{ [fieldId: string]: unknown }>[] | undefined;
}

/** A specific "implementation" of a trick, with a specific set of notes and tutorial (video or other) */

export interface IVariant extends Entry<IVariantFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: "variant";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export type CONTENT_TYPE =
  | "author"
  | "bingoGoal"
  | "post"
  | "trick"
  | "tutorial"
  | "variant";

export type IEntry =
  | IAuthor
  | IBingoGoal
  | IPost
  | ITrick
  | ITutorial
  | IVariant;

export type LOCALE_CODE = "en-US";

export type CONTENTFUL_DEFAULT_LOCALE_CODE = "en-US";
